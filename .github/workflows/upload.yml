name: Build and Deploy

on:
  release:
    # The tag will be available at ${{ env.GITHUB_REF }}
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker (static)
        id: meta_static
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          # In the code below, we enable the 'dev' or 'latest' tag depending
          # on the release type.
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=dev,enable=${{ github.event.release.prerelease }}
          flavor: |
            prefix=static-,onlatest=true
            latest=${{ !github.event.release.prerelease }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          # In the code below, we enable the 'dev' or 'latest' tag depending
          # on the release type.
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=dev,enable=${{ github.event.release.prerelease }}
          flavor: |
            latest=${{ !github.event.release.prerelease }}

      - name: Build and push doku static
        uses: docker/build-push-action@v2
        with:
          file: 'doku/static/Dockerfile'
          context: 'doku/static'
          push: true
          tags: ${{ steps.meta_static.outputs.tags }}
          labels: ${{ steps.meta_static.outputs.labels }}

      - name: Build and push doku
        uses: docker/build-push-action@v2
        with:
          file: './Dockerfile'
          context: '.'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
